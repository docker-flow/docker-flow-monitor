version: "3.2"

services:

  ha-proxy:
    image: quay.io/prometheus/haproxy-exporter:${HA_PROXY_TAG:-latest}
    # networks:
    #   - proxy
    #   - monitor
    ports:
      - 9101:9101
    deploy:
      labels:
        - com.df.notify=true
        - com.df.scrapePort=9101
    command: --haproxy.scrape-uri="http://admin:admin@proxy/admin?stats;csv"


  cadvisor:
    image: google/cadvisor
    # networks:
    #   - monitor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    ports:
      - 8080:8080
    deploy:
      mode: global
      labels:
        - com.df.notify=true
        - com.df.scrapePort=8080


  node-exporter:
    image: basi/node-exporter
    # networks:
    #   - monitor
    environment:
      - HOST_HOSTNAME=/etc/host_hostname
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/host_hostname
    ports:
      - 9100:9100
    deploy:
      mode: global
      labels:
        - com.df.notify=true
        - com.df.scrapePort=9100
        
        - com.df.alertName.1=mem_load
        - com.df.alertIf.1=(sum by (instance) (node_memory_MemTotal) - sum by (instance) (node_memory_MemFree + node_memory_Buffers + node_memory_Cached)) / sum by (instance) (node_memory_MemTotal) > 0.8

        - com.df.alertName.2=disk_load
        - com.df.alertIf.2=@node_fs_limit:0.8

        - com.df.alertName.3=http_req_load
        - com.df.alertIf.3=(avg(http_requests_total[5m]) by (application)) > 10

    command: '--path.procfs="/host/proc" --path.sysfs="/host/sys" --collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)" --collector.textfile.directory="/etc/node-exporter/" --collector.conntrack --collector.diskstats --collector.entropy --collector.filefd --collector.filesystem --collector.loadavg --collector.mdadm --collector.meminfo --collector.netdev --collector.netstat --collector.stat --collector.textfile --collector.time --collector.vmstat --collector.ipvs'


  monitor:
    image: dockerflow/docker-flow-monitor
    environment:
      - VIRTUAL_HOST=monitor.local
      - LISTENER_ADDRESS=swarm-listener
      - GLOBAL_SCRAPE_INTERVAL=${SCRAPE_INTERVAL:-10s}
      - ARG_WEB_ROUTE-PREFIX=/monitor
      - ARG_WEB_EXTERNAL-URL=http://${DOMAIN:-localhost}/monitor
      - ARG_ALERTMANAGER_URL=http://alert-manager:9093
    # networks:
    #   - proxy
    #   - monitor
    ports:
      - 9090:9090
    deploy:
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.servicePath=/monitor
        - com.df.serviceDomain=${DOMAIN:-localhost}
        - com.df.port=9090
      resources:
        reservations:
          memory: 500M
        limits:
          memory: 800M


  alert-manager:
    image: prom/alertmanager
    # networks:
    #   - monitor
    secrets:
      - alert_manager_config
    depends_on:
      - cadvisor
    command: --config.file=/run/secrets/alert_manager_config --storage.path=/alertmanager


  swarm-listener:
    image: dockerflow/docker-flow-swarm-listener
    # networks:
    #   - monitor
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DF_NOTIFY_CREATE_SERVICE_URL=http://monitor:8080/v1/docker-flow-monitor/reconfigure
      - DF_NOTIFY_REMOVE_SERVICE_URL=http://monitor:8080/v1/docker-flow-monitor/remove
    deploy:
      placement:
        constraints: [node.role == manager]
      resources:
        reservations:
          memory: 5M
        limits:
          memory: 10M

networks:
  monitor:
    external: true
  proxy:
    external: true

secrets:
  alert_manager_config:
    external: true